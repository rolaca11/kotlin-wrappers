// Generated by Karakum - do not modify it manually!



package bodyparser

import node.buffer.Buffer


external interface Options {
/** When set to true, then deflated (compressed) bodies will be inflated; when false, deflated bodies are rejected. Defaults to true. */
var inflate: Boolean?
/**
         * Controls the maximum request body size. If this is a number,
         * then the value specifies the number of bytes; if it is a string,
         * the value is passed to the bytes library for parsing. Defaults to '100kb'.
         */
var limit: Any? /* number | string | undefined */
/**
         * The type option is used to determine what media type the middleware will parse
         */
var type: Any? /* string | string[] | ((req: http.IncomingMessage) => any) | undefined */
/**
         * The verify option, if supplied, is called as verify(req, res, buf, encoding),
         * where buf is a Buffer of the raw request body and encoding is the encoding of the request.
         */
fun verify(req: node.http.IncomingMessage, res: node.http.ServerResponse<*>, buf: Buffer, encoding: String): Unit
}
